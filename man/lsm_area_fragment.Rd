% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsm_area_fragment.R
\name{lsm_area_fragment}
\alias{lsm_area_fragment}
\title{Calculate fragment area}
\usage{
lsm_area_fragment(
  input,
  output = NULL,
  zero_as_null = FALSE,
  region_input = FALSE,
  id_direction = 8,
  area_round_digit = 0,
  area_unit = "ha",
  map_fragment_id = FALSE,
  map_fragment_ncell = FALSE,
  table_fragment_area = FALSE
)
}
\arguments{
\item{input}{\verb{[character]} Habitat map (binary classification: e.g., 1/0 or 1/NA) in GRASS.}

\item{output}{\verb{[character]} Output map base name in GRASS.}

\item{zero_as_null}{\verb{[logical]} If TRUE, non-habitat (0) cells are converted to NULL.}

\item{region_input}{\verb{[logical]}}

\item{id_direction}{\verb{[numeric]} Neighborhood for clumping (4 or 8).}

\item{area_round_digit}{\verb{[integer]} Decimal digits for area rounding.}

\item{area_unit}{\verb{[character]} Area unit: \code{"ha"}, \code{"m2"}, or \code{"km2"}.}

\item{map_fragment_id}{\verb{[logical]} Keep fragment ID raster?}

\item{map_fragment_ncell}{\verb{[logical]} Output raster with fragment cell counts?}

\item{table_fragment_area}{\verb{[logical]} Output CSV with fragment area and summary?}
}
\description{
Identifies fragments and calculates area in a selected unit.
}
\examples{
library(lsmetrics)
library(terra)

# read habitat data
r <- lsmetrics::lsm_toy_landscape(proj_type = "meters")

# plot
plot(r, legend = FALSE, axes = FALSE, main = "Binary habitat")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r)

# find grass
path_grass <- system("grass --config path", inter = TRUE) # windows users need to find the grass gis path installation, e.g. "C:/Program Files/GRASS GIS 8.3"

# create grassdb
rgrass::initGRASS(gisBase = path_grass,
                  SG = r,
                  gisDbase = "grassdb",
                  location = "newLocation",
                  mapset = "PERMANENT",
                  override = TRUE)

# import raster from r to grass
rgrass::write_RAST(x = r, flags = c("o", "overwrite", "quiet"), vname = "r", verbose = FALSE)

# area
lsmetrics::lsm_area_fragment(input = "r", area_round_digit = 2, map_fragment_id = TRUE, table_fragment_area = TRUE)

# files
rgrass::execGRASS(cmd = "g.list", type = "raster")

# import from grass to r
r_fragment_id <- rgrass::read_RAST("r_fragment_id", flags = "quiet", return_format = "terra")

# plot
plot(r_fragment_id, legend = FALSE, axes = FALSE, main = "Fragment id")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_fragment_id)

# import from grass to r
r_fragment_area <- rgrass::read_RAST("r_fragment_area", flags = "quiet", return_format = "terra")

plot(r_fragment_area, legend = FALSE, axes = FALSE, main = "Fragment area (ha)")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_fragment_area, digits = 2)

# table
da_fragment_area <- vroom::vroom("r_fragment_table_area.csv", show_col_types = FALSE)
da_fragment_area

# delete grassdb
unlink("r_fragment_table_area.csv")
unlink("grassdb", recursive = TRUE)

}
